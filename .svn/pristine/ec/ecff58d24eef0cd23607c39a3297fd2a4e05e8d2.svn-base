package com.fy.msgsys.appclient.napi.abs;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.List;

import com.fy.msgsys.appclient.api.exception.ConnectWebsocketException;
import com.fy.msgsys.appclient.api.exception.IllegalWebsocketException;
import com.fy.msgsys.appclient.napi.core.WebsocketClientImpl;
import com.fy.msgsys.appclient.napi.core.WebsocketCoreInterf;
import com.fy.msgsys.appclient.napi.interf.FeedbackInterf;
import com.fy.msgsys.appclient.napi.interf.WebsocketClientInterf;

public abstract class  APPClientAbs implements Runnable,WebsocketCoreInterf,FeedbackInterf,WebsocketClientInterf{

	private WebsocketClientImpl coreClient;
	private String host;
	private int port;
	
	public APPClientAbs(){
		
		
		coreClient = new WebsocketClientImpl(this);
		
	}
	
	public APPClientAbs(String host ,int port){
		this.host = host;
		this.port = port;
		
		coreClient = new WebsocketClientImpl(this);
		
	}

	@Override
	public void virify(String userKey, String virifyCode) throws IOException,
			ConnectWebsocketException {
		
	}


	@Override
	public void connection() {
	
		Thread thread = new Thread(this);
		thread.start();
	}

	@Override
	public void sendMsgBinary(ByteBuffer msg, long timeout) {
		
	}

	@Override
	public void sendMsgBinary(List<ByteBuffer> msg, long timeout) {
		
	}

	@Override
	public void sendMsgText(ByteBuffer msg, long timeout)
			throws IllegalWebsocketException {
		
	}

	@Override
	public void close(long timeout) {
		
	}


	@Override
	public void run() {
		
		
		
	}

	@Override
	public void onWebsocketMessageB(ByteBuffer msg) {
		onMessageB(msg);
		
	}

	@Override
	public void onWebsocketMessageT(ByteBuffer msg) {
		onMessageT(msg);
		
	}

	@Override
	public void onWebsocketError(Exception e, String info) {

		onError(e,info);
	}

	@Override
	public void onWebsocketClose(Exception e, String info) {

		onClose(e,info);
	}
	
	
	/**
	 * 接收二进制消息
	 * @param msg
	 */
	public abstract void onMessageB(ByteBuffer msg);
	
	/**
	 * 接收文本消息
	 * @param msg 文件消息内容
	 */
	public abstract void onMessageT(ByteBuffer msg);
	
	/**
	 * 读取和写入异常		
	 * @param e 异常
	 * @param info 异常的补充消息
	 */
	public abstract void onError(Exception e,String info);
	
	/**
	 * 异常关闭
	 * @param e 异常
	 * @param info 异常的补充消息
	 */
	public abstract void onClose(Exception e,String info);
	
	
}
