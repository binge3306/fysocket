package com.fy.msgsys.appclient.napi.server;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import com.fy.msgsys.appclient.api.exception.ConnectWebsocketException;
import com.fy.msgsys.appclient.api.exception.IllegalWebsocketException;
import com.fy.msgsys.appclient.api.util.logger.LoggerUtil;
import com.fy.msgsys.appclient.napi.abs.APPClientAbs;

public class APPClient extends APPClientAbs{

	
	private Logger logger = LoggerUtil.getLogger(this.getClass().getName());
	
	
	public APPClient(String host,int port) {
		super();
	}

	@Override
	public void onMessageB(ByteBuffer msg) {
		logger.log(Level.INFO, "收到一条二进制消息");
	}

	@Override
	public void onMessageT(ByteBuffer msg) {
		logger.log(Level.INFO, "收到一条文本消息");
	}

	@Override
	public void onError(Exception e, String info) {
		logger.log(Level.INFO, "接收过程发生错误");
		
	}

	@Override
	public void onClose(Exception e, String info) {
		logger.log(Level.INFO, "通道关闭");
		
	}
	/**
	 * 添加的测试方法
	 * @param msg		消息内容	
	 * @param times		发送次数	
	 * @param timeout	每次发送间隔
	 */
	public void sendMsg(String msg ,int times ,int timeout){

		ByteBuffer msgb = ByteBuffer.allocate(10);
		if(msg == null){
			msgb.put("appclient msg".getBytes());
		}else{
			msgb.put(msg.getBytes());
		}
		while(times >= 0){
			times --;
			msgb.put((" = " +times).getBytes());
			msgb.flip();
			try {
				sendMsgText(msgb, 0);
			} catch (IllegalWebsocketException e) {
				e.printStackTrace();
			}
		}
	}
}
