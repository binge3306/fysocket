package com.fy.msgsys.appclient.napi.core;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;

import com.fy.msgsys.appclient.api.util.ByteBufferSwap;
import com.fy.msgsys.appclient.api.util.ReceiveMsgQueue;
import com.fy.msgsys.appclient.api.util.SendMsgQueue;
import com.fy.msgsys.appclient.napi.interf.FeedbackInterf;

/**
 * 
 * websocket 连接核心实现
 * @author wurunzhou
 *
 */
public class WebsocketClientImpl implements CodeWebsocketFBInter{

	private FeedbackInterf feedbackInterf;
	/**
	 * 待发送消息队列
	 */
	public  SendMsgQueue sendMsgQueue  ;
	/**
	 * 待处理消息队列
	 */
	public  ReceiveMsgQueue receiveMsgQueue ;
	
	public WebsocketClientImpl(FeedbackInterf feedbackInterf){
		this.feedbackInterf = feedbackInterf;
		sendMsgQueue = new SendMsgQueue(5);
		receiveMsgQueue = new ReceiveMsgQueue(5);
	}
	

	/**
	 * 客户端读取IO消息
	 * 解码之后，提示给用户
	 * @param websocketmsg 从IO读取的websocket包
	 */
	public void  processMsgT(ByteBuffer websocketmsg){
//		System.out.println(""+ByteBufferSwap.byteBufferToString(msg));
//		ByteBuffer rmsg = ByteBuffer.allocate(12);
//		rmsg.put("新消息".getBytes());
//		rmsg.flip();
		new DeEncodeUtil(this).decodeWebsocket(websocketmsg);
		
	}

	/**
	 * 提示用户有新消息
	 */
	public void readMsgT(ByteBuffer msg){

		feedbackInterf.onMessageT(msg);
	}

	@Override
	public void encodeFine(ByteBuffer websocketMsg) {
		
	}

	@Override
	public void decodeFine(ByteBuffer msg) {
		readMsgT(msg);
	}
	
	
}
